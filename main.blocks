<xml xmlns="https://developers.google.com/blockly/xml"><comment data="0" x="0" y="0" h="120" w="470">Use the VARIABLE.defl=VALUE notation to specify
default argument values.</comment><block type="function_definition" x="10" y="10"><mutation name="_7seg" functionid="b!h]x{ILqA|_yg#EN(iw"><arg name="num" id="7ysxwhr4atpypbpna1x82k" type="number"></arg></mutation><field name="function_name">_7seg</field><data>0</data><statement name="STACK"><block type="function_return"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get"><value name="LIST"><block type="lists_create_with" inline="false"><mutation items="10" horizontalafter="3"></mutation><value name="ADD0"><shadow type="text"><field name="TEXT">1111110</field></shadow></value><value name="ADD1"><shadow type="text"><field name="TEXT">0110000</field></shadow></value><value name="ADD2"><shadow type="text"><field name="TEXT">1101101</field></shadow></value><value name="ADD3"><shadow type="text"><field name="TEXT">1111001</field></shadow></value><value name="ADD4"><shadow type="text"><field name="TEXT">0110011</field></shadow></value><value name="ADD5"><shadow type="text"><field name="TEXT">1011011</field></shadow></value><value name="ADD6"><shadow type="text"><field name="TEXT">1111101</field></shadow></value><value name="ADD7"><shadow type="text"><field name="TEXT">1110000</field></shadow></value><value name="ADD8"><shadow type="text"><field name="TEXT">1111111</field></shadow></value><value name="ADD9"><shadow type="text"><field name="TEXT">1111011</field></shadow></value></block></value><value name="INDEX"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number"><field name="VALUE">num</field></block></value></block></value></block></statement></block><block type="pxt-on-start" x="10" y="10"><statement name="HANDLER"><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let _7SegImg: Image = null" numlines="1" declaredvars="_7SegImg"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let _7SegII = 0" numlines="1" declaredvars="_7SegII"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let _7SegI = 0" numlines="1" declaredvars="_7SegI"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace My_Rune_Generator {" line1="    //% block" line2="    export function GenerateRune(Col: number, Inverted: boolean) {" line3="        _7SegImg = img`" line4="        . . . . . . . . . . . . . . . . " line5="        . . . . . . . . . . . . . . . . " line6="        . . . . . . . . . . . . . . . . " line7="        . . . . . . . . . . . . . . . . " line8="        . . . . . . . . . . . . . . . . " line9="        . . . . . . . . . . . . . . . . " line10="        . . . . . . . . . . . . . . . . " line11="        . . . . . . . . . . . . . . . . " line12="        . . . . . . . . . . . . . . . . " line13="        . . . . . . . . . . . . . . . . " line14="        . . . . . . . . . . . . . . . . " line15="        . . . . . . . . . . . . . . . . " line16="        . . . . . . . . . . . . . . . . " line17="        . . . . . . . . . . . . . . . . " line18="        . . . . . . . . . . . . . . . . " line19="        . . . . . . . . . . . . . . . . " line20="        `" line21="        _7SegII = 0" line22="        for (let index = 0; index &lt; 4; index++) {" line23="            _7SegI = 0" line24="            for (let value of _7seg(randint(0, 9))) {" line25="                if ((value == &quot;0&quot;) == Inverted) {" line26="                    _7SegImg.drawLine([" line27="                        0," line28="                        2," line29="                        2," line30="                        2," line31="                        0," line32="                        0," line33="                        0" line34="                    ][_7SegI] + _7SegII % 12, [" line35="                        0," line36="                        0," line37="                        2," line38="                        4," line39="                        4," line40="                        2," line41="                        2" line42="                    ][_7SegI] + Math.floor(_7SegII / 12) * 6, [" line43="                        2," line44="                        2," line45="                        2," line46="                        0," line47="                        0," line48="                        0," line49="                        2" line50="                    ][_7SegI] + _7SegII % 12, [" line51="                        0," line52="                        2," line53="                        4," line54="                        4," line55="                        2," line56="                        0," line57="                        2" line58="                    ][_7SegI] + Math.floor(_7SegII / 12) * 6, Col)" line59="                }" line60="                _7SegI += 1" line61="            }" line62="            _7SegII += 6" line63="        }" line64="        return _7SegImg" line65="    }" line66="}" numlines="67"></mutation></block></next></block></next></block></next></block></statement></block></xml>